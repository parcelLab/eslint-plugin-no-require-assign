################################################################################
#                     DO NOT EDIT THIS FILE (Auto-Generated)                   #
# Contents of this file were generated by https://github.com/parcelLab/.github #
# Changes to this file may be overwritten.                                     #
################################################################################
name: ~Lib / Deployment Trigger
on:
  workflow_call:
    inputs:
      author:
        required: true
        description: The author of the change that triggers the deployment
        type: string
      description:
        required: true
        description: The description of the change (e.g. the commit title)
        type: string
      containerContextPath:
        required: false
        description: The path where the container context is loaded
        default: .
        type: string
      containerFile:
        required: false
        description: The container file name
        default: Containerfile
        type: string
      env:
        required: true
        description: The application environment. Can be test, staging or prod.
        type: string
      ref:
        required: true
        description: The github ref to deploy
        default: main
        type: string

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current git repository
        uses: actions/checkout@v3
      - name: Load plconfig deployment values
        id: deployment-values
        uses: mikefarah/yq@v4.28.2
        with:
          cmd: yq -o json -I 0 '.deployment' plconfig.yaml
      - name: Load deployment variables
        id: vars
        run: |
          NAME="${{ fromJSON(steps.deployment-values.outputs.result).name }}"
          NAMESPACE="${{ fromJSON(steps.deployment-values.outputs.result).namespace }}"
          CHART="${{ fromJSON(steps.deployment-values.outputs.result).chart }}"
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "namespace=$NAMESPACE" >> $GITHUB_OUTPUT
          echo "chart=$CHART" >> $GITHUB_OUTPUT
          CLUSTER_DOMAIN="parcellab.dev"
          if [[ "${{ inputs.env }}" == 'prod' ]]
          then
            CLUSTER_NAME="pcp-aws-eu-prod"
          elif [[ "${{ inputs.env }}" == 'staging' ]]
          then
            CLUSTER_NAME="pcp-aws-eu-staging"
          else
            CLUSTER_NAME="pcp-aws-us-test"
          fi
          echo "url=https://$NAME.$CLUSTER_NAME.$CLUSTER_DOMAIN" >> $GITHUB_OUTPUT
          echo "status-url=https://argocd.$CLUSTER_NAME.$CLUSTER_DOMAIN/applications/$NAME" >> $GITHUB_OUTPUT
      - name: Create Github ${{ fromJSON(steps.deployment-values.outputs.result).name }} deployment
        uses: chrnorm/deployment-action@v2
        with:
          auto-merge: false
          environment: ${{ inputs.env }}
          ref: ${{ inputs.ref }}
          required-contexts: ""
          payload: |
            {
              "author": ${{ toJSON(inputs.author) }},
              "chart": ${{ toJSON(steps.vars.outputs.chart) }},
              "container": {
                "context": ${{ toJSON(inputs.containerContextPath) }},
                "file": ${{ toJSON(inputs.containerFile) }}
              },
              "description": ${{ toJSON(inputs.description) }},
              "env": ${{ toJSON(inputs.env) }},
              "name": ${{ toJSON(steps.vars.outputs.name) }},
              "namespace": ${{ toJSON(steps.vars.outputs.namespace) }},
              "statusUrl": ${{ toJSON(steps.vars.outputs.status-url) }},
              "url": ${{ toJSON(steps.vars.outputs.url) }}
            }
          production-environment: "${{ inputs.env == 'prod' }}"
          transient-environment: "${{ inputs.env == 'test' }}"
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
